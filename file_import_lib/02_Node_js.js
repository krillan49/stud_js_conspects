//                                                Node.js

// https://nodejs.org/api/   - доки Node.js


// Node.js — это серверная среда для JavaScript, которая позволяет запустит ЖС-код на компьютере (на стороне сервера). Таким образом, хотя вы теряете возможность работать со встроенными модулями и функциями браузера, вы получаете доступ к коду, специфичному для NodeJS.



//                                    Node.js фичи примере сравнения с Руби

//                                |   JS                               |  Ruby
// -----------------------------------------------------------------------------------------
// Интерпритатор                  |   node                             |  ruby
// Управление библиотеками        |   npm                              |  gem
// Менеджер библиотек в проекте   |   npm, yarn, brunch, webpack ...   |  bundler
// Список зависимостей            |   package.json                     |  Gemfile
// Слепок (библиотеки + версии)   |   yarn.lock                        |  Gemfile.lock



//                                        Установка Node.js на виндоус

// https://nodejs.org/en   -  Качаем LTS-версию, тоесть стабильную.
// В процессе установки обязательно нужно поставить галочку на пункте "Установить пакетный менеджер NPM", тк он позволяет устанавливать сторонние библиотеки
// Желательно поставить галочку на "Хотите ли вы доставить дополнительные компоненты для компилирования библиотек", добавит инструменты для компиляции библиотек, тк некоторые библиотеки нужно компилировать. Если галка не была поставлена, то чтобы узнать, нужно ли установить дополнительно - нужно воспользоваться руководством тут https://github.com/nodejs/node-gyp

// > node --version


// C:\Program Files\nodejs\   -  путь по которому установил ноджэйэс, его при установке нужно добавить в path(переменные среды)

// > node          - вход в nodejs
// Ctrl+c          - (2 раза) выход

// > node -v       - версия

// > node some.js           - испольнить какой-то ЖС-фаил




//                                         Установка Yarn на виндоус

// Установить пакетный менеджер Yarn(позволяет добавлять всякие штуки для фронтэнда)
// https://yarnpkg.com/getting-started/install
// Если уже стоит Node.js, то достаточно воспользлваться командой:
// > corepack enable        - обязательно нужно вводить в консоли от имени администратора
// Инструкции по обновлению там же в разделе миграций(не делал)
// > yarn -v                - работает только в классической командной строке
// (https://www.youtube.com/watch?v=tqSkBmODHBk  17-16  - исправление ошибок с yarn версиями 2 или 3)
// Если обновляем версию yarn с 1й на 2ю или 3ю, то нужно в конрневой директориии проекта создать фаил .yarnrc.yml (код там)

// Команды апгрэйда yarn, стоит переодически использовать:
// > yarn upgrade                   - для версий 1.
// > yarn upgrade-interactive       - для версий 2. и 3.
// > yarn plugin interactive-tools  - если предыдущая команда выдала херню, то запустить это(добавит плагин) и потом снова предыдущую команду

// удаление чеголибо (тут some) из yarn:
// > yarn remove some



//                                     Установка Node.js и Yarn на Линукс (Ubuntu)

// Обновление/установка Node.js через репозиторий NodeSource - имеются ввиду основные версии, тк минорные обновляются и так. Например, вместо версии 16.x поставить 20.х. Маловероятно, что Ubuntu предоставит крупное обновление новой версии до Node. Вот почему вы должны установить Node непосредственно из официальных репозиториев Nodesource.
// Node предоставляет скрипт для каждой активной основной версии. Нужно заменить YY на нужную версию в "curl -fsSL https://deb.nodesource.com/setup_YY.x | sudo -E bash -", Это заменит исходный файл на другой с нужной версией в /etc/apt/sources.list.d/nodesource.list
// Например добавить репозиторий с Ярн 21, чтобы обновить до версии 21:
// $ curl -fsSL https://deb.nodesource.com/setup_21.x | sudo -E bash -
// Обновить индекс пакета. Это поможет устанавливать последние версии, доступные в репозиториях.
// $ sudo apt update
// $ cat
// Далее установим Node.js из нового исходного фаила:
// $ sudo apt-get install nodejs -y
// На всякий можно обновить систему:
// $ sudo apt upgrade

// $ node -v                - версия
// $ node some.js           - испольнить какой-то ЖС-фаил


// Yarn (требует наличия Node.js в системе) недоступен в репозиториях Ubuntu по умолчанию, поэтому вам необходимо добавить репозиторий Yarn в вашу систему.
// импортировать GPG ключ репозитория:
// $ curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
// После этого нужно добавить репозиторий в файл /etc/apt/sources.list.d/yarn.list вручную или с помощью команды:
// $ echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
// После добавления репозитория Yarn снова обновите индекс пакета и установите Yarn:
// $ sudo apt update
// $ sudo apt install yarn

// $ yarn -v



//                                               Использование

// Чтобы использовать модуль NodeJS, необходимо включить его в свой код присвоив в переменную от встроенной функции NodeJS require(требуется) с аргументом названия модуля в виде строки.
// Встроенная функция NodeJS require точно знает, как найти модуль, поэтому никаких дополнительных действий не требуется

// подключим модуль Node.js - util:
const util = require('util');

// После того, как подключен модуль, можно использовать любой из методов/свойств

// используем метод isRegExp модуля util:
console.log(util.isRegExp(/hi/)); //=> true



//                                             Примеры модулей

// Buffer - модуль NodeJS, подходит, например для того, чтобы воспроизвести кодировку Base64
const { Buffer } = require('node:buffer'); // Работает из без этого, модуль подключен по умолчанию
// кодирует строку в Base64:
console.log(Buffer.from("Hello World").toString('base64'));               //=> 'SGVsbG8gV29ybGQ='
// декодирует строку Base64 в ascii или в utf8
console.log(Buffer.from("SGVsbG8gV29ybGQ=", 'base64').toString('ascii')); //=> Hello World
console.log(Buffer.from("SGVsbG8gV29ybGQ=", 'base64').toString('utf8'));  //=> Hello World


// sha256 - модуль NodeJS, подходит, например для того, чтобы воспроизвести кодировку sha256
const sha256 = require('sha256');
sha256('bacon');                                    //=> 9cca070334...


// crypto - модуль NodeJS, подходит, например для того, чтобы воспроизвести кодировку sha256
const { createHash } = require('crypto');
createHash('sha256').update('bacon').digest('hex'); //=> 9cca070334...

















//
