//                            Объектно ориентированная парадигма программирования

// Например есть человек и любого человека можно охарактеризовать свойствами/характеристиками: имя и возраст, этот набор/описание свойств в ООП называется классом
// Конкретный экземпляр, представитель класса называется объектом, для него кажое свойство класса имеет конкретное значение, например Вася, которому 27 лет
// Характеристики объекта дазываются свойствами, а действия, которые может соверщать объект, называются методами, например Вася может ходить, говорить итд

// Класс Прямоугольник
class Rectangle {
  // У него есть 2 свойства: ширина и высота
  width;
  height;
  // Так же у любого класса есть конструктор - это специальный метод, содержащий набор инструкций, которые вызываются при создании нового объекта. Обычно в конструкторе свойствам объекта присваиваются какие-то значения
  constructor(w, h) {
    this.width = w;
    this.height = h;
  }
  // Так же есть метод считающий площадь перемножая значения свойств
  calcArea() {
    return this.width * this.height;
    // this - возвращает объект от которого быдет вызван данный метод, соотв от него возьмем и свойства
  }
  // Каждый класс может включать в себя любое колличество свойств и методов, но хорошей практикой считается делать классы под конкретные задачи, только с теми свойствами и методами, которые для них необходимы
}
// Создаем новый объект и передаем аргументами значения для его свойств. Можем создать любое колличество объектов
const rect = new Rectangle(w: 5, h: 10);
// От созданного объекта мы можем вызвать метод экземпляора
rect.calcArea() //=> 50












//
